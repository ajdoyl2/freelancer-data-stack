[tool.poetry]
name = "freelancer-data-stack"
version = "0.1.0"
description = "Freelancer Data Stack Project"
authors = ["Data Team"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = ">=3.11,<3.13"

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.0"
black = "^24.0.0"
isort = "^5.13.0"
sqlfluff = "^3.0.0"
pre-commit = "^4.0.0"

[tool.poetry.group.airflow.dependencies]
apache-airflow = "^2.10.0"

[tool.poetry.group.jupyter.dependencies]
jupyter = "^1.1.0"
jupyterlab = "^4.3.0"

[tool.poetry.group.datahub.dependencies]
acryl-datahub = "^0.15.0"

[tool.poetry.group.dagster.dependencies]
dagster = "^1.8.0"
dagster-webserver = "^1.8.0"
dagster-datahub = "^0.24.0"
dagster-docker = "^0.24.0"
requests = "^2.31.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py311']
line-length = 88
skip-string-normalization = true

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.sqlfluff.core]
dialect = "postgres"
max_line_length = 88

[tool.sqlfluff.rules]
max_line_length = 88
