name: "Agent PR Loop"
description: "Automated workflow for agent-driven pull request creation and management"
version: "1.0.0"

commands:
  - name: "create_feature_branch"
    description: "Create a new feature branch for agent work"
    command: |
      echo "🌿 Creating feature branch..."
      # Generate branch name based on current task or timestamp
      BRANCH_NAME="${1:-agent/auto-$(date +%Y%m%d-%H%M%S)}"
      git checkout -b "$BRANCH_NAME"
      echo "✅ Created and switched to branch: $BRANCH_NAME"

  - name: "commit_changes"
    description: "Commit all changes with AI-generated commit message"
    command: |
      echo "💾 Committing changes..."

      # Check if there are changes to commit
      if git diff --quiet && git diff --cached --quiet; then
        echo "ℹ️ No changes to commit"
        exit 0
      fi

      # Generate commit message based on changes
      COMMIT_MSG="${1:-"feat: AI agent automated improvements

      - Applied code quality improvements
      - Updated dependencies and configurations
      - Enhanced documentation and testing

      Generated by: AI Agent $(date '+%Y-%m-%d %H:%M:%S')"}"

      git add .
      git commit -m "$COMMIT_MSG"
      echo "✅ Changes committed"

  - name: "run_pre_pr_checks"
    description: "Run comprehensive checks before creating PR"
    command: |
      echo "🔍 Running pre-PR checks..."

      # Code quality checks
      echo "🎨 Code formatting..."
      poetry run black . --check || poetry run black .
      poetry run isort . --check-only || poetry run isort .
      poetry run ruff check . --fix

      # Type checking
      echo "🔍 Type checking..."
      poetry run mypy . --ignore-missing-imports || true

      # Tests
      echo "🧪 Running tests..."
      poetry run pytest tests/ -x -v --tb=short

      # Security scan
      echo "🔒 Security scan..."
      poetry run bandit -r . -x tests/ || true

      echo "✅ Pre-PR checks completed"

  - name: "create_pr"
    description: "Create pull request with AI-generated description"
    command: |
      echo "📝 Creating pull request..."

      BRANCH_NAME=$(git branch --show-current)

      # Generate PR title and description
      PR_TITLE="${1:-"AI Agent: Automated Stack Improvements"}"
      PR_BODY="${2:-"## 🤖 AI Agent Automated Changes

      This PR contains automated improvements generated by AI agents:

      ### Changes Made
      - Code quality improvements and linting fixes
      - Dependency updates and security patches
      - Documentation enhancements
      - Test coverage improvements
      - Configuration optimizations

      ### Validation
      - ✅ All tests passing
      - ✅ Code quality checks passed
      - ✅ Security scan completed
      - ✅ Documentation updated

      ### Review Notes
      - Changes are automatically generated and tested
      - Review focus should be on business logic correctness
      - All automated checks have passed

      Generated: $(date '+%Y-%m-%d %H:%M:%S')
      Branch: $BRANCH_NAME"}"

      # Create PR using GitHub CLI
      gh pr create --title "$PR_TITLE" --body "$PR_BODY" --assignee @me

      echo "✅ Pull request created successfully"

  - name: "update_pr"
    description: "Update existing PR with new changes"
    command: |
      echo "🔄 Updating pull request..."

      # Add and commit new changes
      git add .
      git commit -m "chore: AI agent updates - $(date '+%Y-%m-%d %H:%M:%S')" || echo "No new changes to commit"

      # Push to remote
      git push origin "$(git branch --show-current)"

      # Update PR description with latest status
      gh pr edit --body "$(gh pr view --json body -q .body)

      ---
      **Latest Update:** $(date '+%Y-%m-%d %H:%M:%S')
      - Automated improvements applied
      - All checks passing"

      echo "✅ Pull request updated"

  - name: "check_pr_status"
    description: "Check status of current PR and CI/CD"
    command: |
      echo "📊 Checking PR status..."

      # Get PR information
      gh pr status

      # Check CI/CD status
      echo "🔄 CI/CD Status:"
      gh run list --limit 5

      # Show PR checks
      echo "✅ PR Checks:"
      gh pr checks

  - name: "auto_merge_pr"
    description: "Automatically merge PR if all checks pass"
    command: |
      echo "🔀 Checking if PR can be auto-merged..."

      # Check if all checks are passing
      if gh pr checks --watch; then
        echo "✅ All checks passed, proceeding with merge"

        # Enable auto-merge
        gh pr merge --auto --squash --delete-branch

        echo "🎉 PR queued for auto-merge"
      else
        echo "❌ Some checks failed, manual review required"
        gh pr checks
      fi

  - name: "cleanup_merged_branches"
    description: "Clean up merged feature branches"
    command: |
      echo "🧹 Cleaning up merged branches..."

      # Switch to main branch
      git checkout main
      git pull origin main

      # Delete merged branches
      git branch --merged | grep -v "main\|master" | xargs -n 1 git branch -d

      # Clean up remote tracking branches
      git remote prune origin

      echo "✅ Cleanup completed"

workflow_templates:
  quick_pr:
    description: "Quick PR creation workflow"
    steps:
      - create_feature_branch
      - commit_changes
      - run_pre_pr_checks
      - create_pr

  full_pr_cycle:
    description: "Complete PR lifecycle management"
    steps:
      - create_feature_branch
      - commit_changes
      - run_pre_pr_checks
      - create_pr
      - check_pr_status
      - auto_merge_pr
      - cleanup_merged_branches

  update_existing_pr:
    description: "Update an existing PR with new changes"
    steps:
      - commit_changes
      - run_pre_pr_checks
      - update_pr
      - check_pr_status

variables:
  PR_TEMPLATE: |
    ## 🤖 AI Agent Generated PR

    ### Summary
    ${summary}

    ### Changes
    ${changes}

    ### Testing
    - [ ] Unit tests pass
    - [ ] Integration tests pass
    - [ ] Manual testing completed

    ### Checklist
    - [ ] Code follows style guidelines
    - [ ] Documentation updated
    - [ ] Tests added/updated
    - [ ] No breaking changes
